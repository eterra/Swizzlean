{"name":"Swizzlean","tagline":"Swizzlean, an Objective-C Swizzle Helper Class.","body":"# Swizzlean  [![Build Status](https://travis-ci.org/rbaumbach/Swizzlean.png)](https://travis-ci.org/rbaumbach/Swizzlean) [![Cocoapod Version](https://cocoapod-badges.herokuapp.com/v/Swizzlean/badge.png)](http://cocoapods.org/?q=Swizzlean) [![Cocoapod Platform](https://cocoapod-badges.herokuapp.com/p/Swizzlean/badge.png)](http://cocoapods.org/?q=Swizzlean) [![License](http://b.repl.ca/v1/License-MIT-blue.png)](https://github.com/rbaumbach/Swizzlean/blob/master/MIT.LICENSE)\r\n\r\nA quick and \"lean\" way to swizzle methods for your Objective-C development needs.\r\n\r\n## Adding Swizzlean to your project\r\n\r\n### Cocoapods\r\n\r\n[CocoaPods](http://cocoapods.org) is the recommended way to add Swizzlean to your project.\r\n\r\n1.  Add Swizzlean to your Podfile `pod 'Swizzlean'`.\r\n2.  Install the pod(s) by running `pod install`.\r\n3.  Include Swizzlean to your files with `#import <Swizzlean/Swizzlean.h>`.\r\n\r\n### Clone from Github\r\n\r\n1.  Clone repository from github and copy files directly, or add it as a git submodule.\r\n2.  Add Swizzlean and RuntimeUtils (.h and .m) files to your project.\r\n\r\n## How To\r\n\r\n* Create an instance of swizzlean passing in the class of the methods you want to swizzle.\r\n* Call swizzleInstanceMethod:withReplacementImplementation: for an instance method passing \r\n  in the selector of the method to be swizzled with the replacement implementation.  When\r\n  passing in the replacement implementation block, the first parameter is always id _self\r\n  (pointer to the 'Class' being swizzled), and the followed by any other parameters for the\r\n  method being swizzled.\r\n* Call swizzleClassMethod:withReplacementImplementation: for a class method passing in\r\n  the selector of the method to be swizzled with the replacement implementation.\r\n* You can check the current instance/class method that is swizzled by using the \r\n  currentInstanceMethodSwizzled and currentClassMethodSwizzled methods.\r\n* The status of the swizzled methods can be seen by calling isInstanceMethodSwizzled and\r\n  isClassMethodSwizzled.\r\n* Use reset methods to unswizzle the instance/class methods that are currently being\r\n  swizzled.\r\n* Methods are automatically reset when the Swizzlean object is deallocated.  If you would like to\r\n  keep the methods swizzled after dealloc is called, set the property resetWhenDeallocated = NO.\r\n\r\n### Example Usage\r\n\r\n```objective-c\r\nSwizzlean *swizzle = [[Swizzlean alloc] initWithClassToSwizzle:[NSString class]];\r\n[swizzle swizzleInstanceMethod:@selector(intValue) withReplacementImplementation:^(id _self) {\r\n    return 42;\r\n}];\r\nNSString *number7 = @\"7\";\r\nNSLog(@\"The int value for number7 is: %d\", [number7 intValue]);\r\n// returns - The int value for number7 is: 42\r\n[swizzle resetSwizzledInstanceMethod];\r\nNSLog(@\"The int value for number7 is: %d\", [number7 intValue]);\r\n// returns - The int value for number7 is: 7\r\n```\r\n\r\n## Testing\r\n\r\n* Prerequisites: [ruby](https://github.com/sstephenson/rbenv), [ruby gems](https://rubygems.org/pages/download), [bundler](http://bundler.io)\r\n\r\nTo use the included Rakefile to run Cedar specs, run the setup.sh script to bundle required gems and cocoapods:\r\n\r\n```bash\r\n$ ./setup.sh\r\n```\r\n\r\nThen run rake to run cedar specs on the command line:\r\n\r\n```bash\r\n$ bundle exec rake\r\n```\r\n\r\nAdditional rake tasks can be seen using rake -T:\r\n\r\n```bash\r\n$ rake -T\r\nrake build_swizzlean    # Build Swizzlean\r\nrake clean[target]      # Clean target\r\nrake clean_all_targets  # Clean all target\r\nrake integration_specs  # Run Integration Specs\r\nrake run_all_specs      # Run all Specs\r\nrake specs              # Run Specs\r\n```\r\n\r\n## Suggestions, requests, feedback and acknowledgements\r\n\r\nThanks for checking out Swizzlean for your swizzling.  Any feedback can be \r\ncan be sent to: rbaumbach.github@gmail.com.\r\n\r\nThis software is licensed under the MIT License.\r\n\r\nThanks to the following contributors for keeping Swizzlean Swizzletastic:\r\nErik Stromlund & Aaron Koop\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}